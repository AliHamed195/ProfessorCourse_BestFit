@model ProfessorCourse_BestFit.Models.ViewModels.DepartmentViewModel

@{
    int num = -200;
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Departments</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/Home">Home</a></li>
                        <li class="breadcrumb-item active">Contact</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">


                    <div class="card">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-2">

                                    @if (Model.normal_Users != null)
                                    {
                                        <select id="listofallusers" class="form-control select2">
                                            <option value="-100">
                                                -- select --
                                            </option>
                                            @foreach (var option in Model.normal_Users)
                                            {
                                                <option value=@option.Uid>
                                                    @option.FirstName  @option.MiddleName  @option.LastName ( @option.Email )
                                                </option>
                                            }
                                        </select>
                                    }
                                </div>
                                <div class="col-4">
                                    <button class="btn btn-primary" id="addRow" onclick="addremove('add')">
                                        Add new manager
                                    </button>
                                </div>
                            </div>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <table id="example1" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Professor Name</th>
                                        <th>Option</th>
                                    </tr>
                                </thead>
                                <tbody id="tbhold">
                                    @if(Model.managers != null)
                                    {
                                        foreach(var manager in Model.managers)
                                        {
                                            <tr>
                                                <td>--</td>
                                                <td>
                                                    <h6 class="result" type="text" text='@manager.FirstName +" "+ @manager.MiddleName+" "+@manager.LastName+" ( "+@manager.Email+" )"' name=@manager.Uid id="h6 @num">
                                                        @manager.FirstName @manager.MiddleName @manager.LastName ( @manager.Email )
                                                    </h6>
                                                </td>
                                                <td>
                                                    <input id=@num class="btn btn-danger btndeleterow" type="button" value="Remove" onclick="addremove(@num)" />
                                                </td>
                                            </tr>
                                            { num--;}
                                        }
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>#</th>
                                        <th>Professor Name</th>
                                        <th>Option</th>
                                    </tr>
                                </tfoot>

                            </table>



                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <a href="/Department/All_Departments" class="btn btn-warning"><i class="bi bi-arrow-left"></i> Back/Cancel</a>
                            <button class="btn btn-primary" type="submit" id="submit" data-id="@Model.Department.DepId">
                                Save Changes
                            </button>
                        </div>
                    </div>
                </div>
                <!-- /.col -->

            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->

    </section>
    <!-- /.content -->




</div>
<!-- /.content-wrapper -->




@section Scripts{

    <script>


        @*
            @if (Model.normal_Users != null)
            {
                var s = "";

                s += "< select ><option id='-100'>--select--</option>";

                foreach (var item in Model.normal_Users)
                {
                    s += "<option value=" + @item.Uid + ">" + @item.FirstName + " " + @item.MiddleName + " " + @item.LastName + "</option>";
                }
                s += "</select>";

            }
        *@

        var counter;

        if (counter == null) {
            counter = 0;
        }



        $(function () {
            $("#example1").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
                "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
        });

        var alldata = [];

        function addremove(number) {

            var t = $('#example1').DataTable();
            var select = document.getElementById('listofallusers');
            var value;
            var text;
            var option;

            if (number == 'add') {
                option = select.options[select.selectedIndex];
                text = option.text;
                value = option.value;
                if (value == -100) {
                    alert('Please Select Name First');
                } else {
                    alldata.push(value);
                    select.removeChild(option);
                    console.log(alldata);

                    t.row.add(["--",
                        '<h6 class="result" type="text" text="' + text + '" name="' + value + '" id="h6 ' + counter + '">' + text + '</h6>',
                        '<input id=' + counter + ' class="btn btn-danger btndeleterow" type="button" value="Remove" onclick="addremove(' + counter + ')"/>']).draw();
                }

            } else {
                var h6 = document.getElementById('h6 ' + number);
                console.log(h6);
                var textToAdd = h6.getAttribute("text");
                var idToMackValue = h6.getAttribute("name");
                console.log(textToAdd);
                console.log(idToMackValue);
                option = document.createElement("option");
                option.value = idToMackValue;
                option.text = textToAdd;
                select.options[select.appendChild(option)];

                console.log(idToMackValue);

                for (var c = 0; c < alldata.length; c++) {
                    if (alldata[c] == idToMackValue) {
                        alldata[c] = "-100";
                    }
                }

                console.log(alldata);

                var tableremove = $('#example1').DataTable();
                var id = number;
                var b = document.getElementById(id);
                tableremove.row(b.closest('tr')).remove().draw();
            }



        }




            @*var jsArray = @Html.Raw(Json.Encode(Model.normal_Users));*@

            /*
            var selecttt = document.createElement("select");
            selecttt.name = "selectlist";
            var option = document.createElement("option");
            option.value = -100;
            option.text = "--select--";
            selecttt.appendChild(option);
            for (var ii = 0; ii < jsArray.length; ii++) {
                var option = document.createElement("option");
                option.value = jsArray[ii].Uid;
                option.text = jsArray[ii].FirstName + " " + jsArray[ii].MiddleName + " " + jsArray[ii].LastName +" ( "+ jsArray[ii].Email+" )";
                selecttt.appendChild(option);
            }
            */


            //document.querySelector("select")
            //var tablebody = document.getElementById('tbhold');
            //var test = tablebody.innerHTML + selecttt;

            //var s = "";
            //s += "< select ><option id='-100'>--select--</option>";
            //for (var ii = 0; ii < jsArray.length; ii++) {
            //    s += "<option value=" + jsArray[ii].Uid + ">" + jsArray[ii].FirstName + " " + jsArray[ii].MiddleName + " " + jsArray[ii].LastName + "-" + jsArray[ii].Email +"</option>";
            //}
            //s += "</select>";
            //console.log(s);
            //document.body.appendChild(selecttt);
           // var newmanagers = [];


        /*
            $('#addRow').on('click', function () {
                var t = $('#example1').DataTable();
                var select = document.getElementById('listofallusers');
                var option = select.options[select.selectedIndex];
                var text = option.text;
                var value = option.value;
                newmanagers.push(value);
                select.remove(value);
                console.log(newmanagers);


                t.row.add(["--",
                    '<h6 text="' + text +'" name="' + value + '" id="h6' + counter +'">' + text + '</h6>',
                    '<input id=' + counter + ' class="btn btn-danger btndeleterow" type="button" value="Remove" onclick="removerow(' + counter + ')"/>']).draw();

*/





                /*

                var listoptions = [];
                for (var ii = 0; ii < jsArray.length; ii++) {
                    var option = document.createElement("option");
                    option.value = jsArray[ii].Uid;
                    option.text = jsArray[ii].FirstName + " " + jsArray[ii].MiddleName + " " + jsArray[ii].LastName + " ( " + jsArray[ii].Email + " )";
                    listoptions.push(option);
                }
                */
                //console.log(jsArray);
                //var newrow = ["--", selecttt, '<input id=' + counter + ' class="btn btn-danger btndeleterow" type="button" value="Remove" onclick="removerow(' + counter + ')"/>'];
                /*
                t.row.add(["--",
                    '<select id='+"selectlist" + counter +'><option id="-100">--select--</option></select>',
                    '<input id=' + counter + ' class="btn btn-danger btndeleterow" type="button" value="Remove" onclick="removerow(' + counter + ')"/>']).draw();
                    */
                //var newrow = '<tr><td>--</td>' + selecttt +'<td></td><td><input id=' + counter + ' class="btn btn-danger btndeleterow" type="button" value="Remove" onclick="removerow(' + counter + ')"/></td></tr>';

                //
                //t.row.appendChild(newrow);
                /*
                var testlist = document.getElementById('selectlist' + counter);
                console.log(testlist);

                testlist.appendChild(listoptions);
                counter = counter + 1;
                console.log(jsArray);
                //console.log(selecttt);
                //document.body.appendChild(selecttt);
                */
            //});


  /*
        function removerow(number) {
            var select = document.getElementById('listofallusers');

            var h6 = document.getElementById('h6' + number);
            console.log(h6);
            var textToAdd = h6.getAttribute("text");
            var idToMackValue = h6.getAttribute("name");
            console.log(textToAdd);
            console.log(idToMackValue);

            var optionn = document.createElement("option");
            optionn.value = idToMackValue;
            optionn.text = textToAdd;
            select.appendChild(optionn);

            console.log(idToMackValue);

            for (var c = 0; c < newmanagers.length; c++) {
                if (newmanagers[c] == idToMackValue) {
                    newmanagers[c] = "-100";
                }
            }

            console.log(newmanagers);

            var tableremove = $('#example1').DataTable();
            var id = number;
            var b = document.getElementById(id);
            tableremove.row(b.closest('tr')).remove().draw();

        }
        */
        /*
           $('#tbhold input[type="button"]').click(function () {
                cell = $(this).parent().prev();
                cell.remove();
            });

        $('.btndeleterow').on('click', function () {
            var t = $('#example1').DataTable();
            var deleterows = $(this).closest('tr');
            t.row.deleterows.remove();

        });
        */
        
        $(document).ready(function () {
        //FOR SUBMITION
        var allmanagers = document.getElementsByClassName("result");
        var btn = document.getElementById("submit");
        var listOfID = []
        btn.addEventListener("click", () => {
            for (let i = 0; i < allmanagers.length; i++) {
                if (allmanagers[i].getAttribute("name") != -100 && allmanagers[i].getAttribute("name") != "-100") {
                    listOfID.push(allmanagers[i].getAttribute("name"))
                }
            }

            if (listOfID.length <= 0) {
                listOfID.push("null data")
            }

            /*
             for (let i = 0; i < lists.length; i++) {
                if (checkboxes[i].chacked) {

                    listOfID.push(checkboxes[i].getAttribute("id"))
                }
            }
            */

            $.ajax({
                url: '/Department/Add_Remove_Department_Managers/',
                type: 'post',
                data: {
                    id: btn.getAttribute("data-id"),
                    ids: listOfID
                },
                success: function (json) {
                    if (json.isRedirect) {
                        window.location.href = json.redirectUrl;
                    }
                }
            });

        })

        });
    </script>


}